# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp
        call main
        halt
        
.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:
        # 传递参数
        irmovq src, %rdi
        irmovq dest, %rsi
        irmovq $3, %rdx
        call copy_block
        ret

copy_block:
	irmovq $0, %rax # long result = 0
        irmovq $1, %r9
        irmovq $8, %r10
while:
	andq %rdx, %rdx 
	jle done
	mrmovq (%rdi), %r8 # %r8 = val = *src
        addq %r10, %rdi # src++
	rmmovq %r8,(%rsi)
        addq %r10, %rsi
	xorq %r8, %rax
	subq %r9, %rdx
	jmp while
done:
	ret

        .pos 0x200
stack:        
